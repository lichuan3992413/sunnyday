package com.hskj.callableTask;

import java.util.List;
import java.util.concurrent.Callable;

import org.slf4j.Logger;

import com.hskj.dao.IMessageDAO;
import com.hskj.form.SubmitMessageArriveReply;
import com.hskj.log.CommonLogFactory;
import com.hskj.rao.GateRAO;

/**
 * 将数据中心mustArriveReplyUpdateQueue队列中必达短信回执更新到redis和数据库中
 */
public class MustArriveReplyUpdateTask implements Callable<Integer> {
	
	private Logger log = CommonLogFactory.getCommonLog("infoLog");
	private IMessageDAO dao;
	private List<SubmitMessageArriveReply> list;
	private GateRAO gateRAO;
	private String must_arrive_reply;
	private String must_arrive_valid_time;

	public MustArriveReplyUpdateTask(IMessageDAO dao, GateRAO gateRAO, List<SubmitMessageArriveReply> list, String must_arrive_reply, String must_arrive_valid_time) {
		this.dao = dao;
		this.gateRAO = gateRAO;
		this.list = list;
		this.must_arrive_reply = must_arrive_reply;
		this.must_arrive_valid_time = must_arrive_valid_time;
	}


	@Override
	public Integer call() throws Exception {
		try {
			if (list != null && list.size() > 0) {
				long time1 = System.currentTimeMillis();
				List<SubmitMessageArriveReply> updateList = gateRAO.updateArriveReplyFromRedis(list, must_arrive_reply, must_arrive_valid_time);
				if (log.isDebugEnabled()) {
					log.debug("updateArriveReplyFromRedis rtnUpdateList:" + updateList.size());
				}
				
				int trys = 3;
				while (trys-- > 0) {
					try {
						dao.updateSubmitMessageArriveReplyList(updateList);
						trys = 0;
					} catch (Exception e) {
						Thread.sleep(1000);
						if(trys == 0){
							throw e;
						}
					}
				}
				
				long time = System.currentTimeMillis() - time1;
				if (time > 3000) {
					log.warn("updateSubmitMessageArriveReplyList [" + list.size() + "]too long time [" + time + "]ms ");
				}
			}
		} catch (Exception e) {
			log.error("MustArriveReplyUpdateTask error" + list, e);
		}

		return null;
	}

}
